<?phpnamespace Zion\Acesso;use Zion\Exception\ErrorException;abstract class AcessoVO{    private $usuarioCod;    private $moduloNome;    private $acaoModuloIdPermissao;    /**     *      * @param int $valor     * @return \Zion\Acesso\AcessoVO     */    public function setusuarioCod($valor)    {        if (!is_numeric($valor)) {            throw new ErrorException('Código do usuário inválido!');        }        $this->usuarioCod = $valor;        return $this;    }    public function getusuarioCod()    {        return $this->usuarioCod;    }    /**     *      * @param string $valor     * @return \Zion\Acesso\AcessoVO     */    public function setModuloNome($valor)    {        if (!is_string($valor)) {            throw new ErrorException('Nome do módulo é inválido!');        }        $this->moduloNome = $valor;        return $this;    }    public function getModuloNome()    {        return $this->moduloNome;    }    /**     *      * @param string $valor     * @return \Zion\Acesso\AcessoVO     */    public function setAcaoModuloIdPermissao($valor)    {        if (!is_string($valor)) {            throw new ErrorException('Ação do módulo é inválida!');        }        $this->acaoModuloIdPermissao = $valor;        return $this;    }    public function getAcaoModuloIdPermissao()    {        return $this->acaoModuloIdPermissao;    }}